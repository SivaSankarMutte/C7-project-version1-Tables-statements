create table admin(
	adminId int auto_increment,
	adminName varchar(100) not null,
	email varchar(100) unique not null,
	password varchar(100) not null,
	department varchar(100) not null,
	primary key(adminId)
);


create table faculty(
	facultyId int auto_increment,
	adminId int not null,
	facultyName varchar(100),
	email varchar(120) unique not null,
	password varchar(100) not null,
	primary key(facultyId),
	foreign key(adminId) references admin(adminId) on delete cascade on update cascade
);

create table students(
	facultyId int not null,
	listName varchar(100) not null,
	studentId int auto_increment,
	studentName varchar(100),
	regdNo varchar(100) not null,
	studentEmail varchar(100) not null,
	foreign key(facultyId) references faculty(facultyId) on delete cascade on update cascade,
	CONSTRAINT studentsRegdnoList UNIQUE(facultyId,listName,regdNo),
	CONSTRAINT studentsEmailList UNIQUE(facultyId,listName,studentEmail),
	primary key(studentId)
);

create table exam(
	examId int auto_increment,
	examName varchar(100) not null,
	facultyId int not null,
	listName varchar(100) not null,
	noOfQuestions int,
	startTime datetime not null,
	endTime datetime not null,
	totalMarks int,
	primary key(examId),
	foreign key(facultyId) references faculty(facultyId) on delete cascade on update cascade
);


create table questions(
	questionId int auto_increment,
	examId int not null,
	questionName varchar(120) not null,
	opt1 varchar(120) not null,
	opt2 varchar(120) not null,
	opt3 varchar(120),
	opt4 varchar(120),
	ans int not null,
	questionMarks int default 1,
	primary key(questionId),
	foreign key(examId) references exam(examId) on delete cascade on update cascade
);

create table results(
	examId int not null,
	regdno varchar(100) not null,
	marks int,
	foreign key(examId) references exam(examId)
);	
	







